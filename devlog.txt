DEVLOG (Team lame)

Instructions:
Devlog allows any group member at any time to see the current state of the project.
PM will make sure devlog is being maintained, but will not make all entries.
The devlog should be a plain text file, stored in the specified location.
When any team member stops working and pushes changes to github, they should update the devlog explaining what changes have been made. Include errors/bugs discovered (or created).
Separate devlog entries with a newline.
Most recent entry at the bottom.
Each entry should begin with the following format: firstL -- TIMESTAMP\n ( e.g.: topherM -- 1999-12-31 23:59 )

ameliaC -- 2021-04-21 10:00
- linked lame submodule to repo of holding
- created basic file system for team lame repo

ameliaC, ethanS, liamK, maddyA -- 2021-04-21 22:13
- finished first version of design doc; had so much fun!!!
- focused especially on task breakdown

ethanS -- 2021-04-26 00:00
- added basic login/user registration functionality
- created db file
- created users db table
- added "app.run() section", app is runnable!

ameliaC, ethanS, liamK, maddyA -- 2021-04-26 16:28
- created site map for our profile page
- updated design doc, addressed suggestions made by teams crabs and xoxo during DD review
    - added notepad feature
    - topic of our project
    - timeline
- updated readme
- renamed app.py to __init__.py

ethanS -- 2021-04-26 17:30
- added page which tests login/out, we can now have sessions and accounts with usernames (it works)
- created table in db to manage notes, added form section to HTML user_page file and some basic outlining of functions in __init__.py
- added html template for future use
- added error.html which just displays an L if something goes wrong (login error for now but will be expanded)
- added helpers.py file, which will contain all helper functions not meant for __init__.py
    - within helpers.py, added a_clean(str) function, which makes strings of raw text compatable with SQL queries
- added custom greeting based on time of day (good morning, good evening, etc)

maddyA -- 2021-04-26 23:31
- created own flask app which successfully returns a random dog photo from the Dog CEO API
- began work on making all of the resulting images the same size/standardized to fit our profile page

ameliaC -- 2021-04-27 9:44
- created own flask app to return a random piece of advice from the Advice Slip API
- edited readme ("motivational quote" --> "advice")

ameliaC -- 2021-04-27 10:40
- added on the Public Holiday API work to my separate flask app 
- added the code for the Advice Slip and Public Holiday APIs to the __init__.py file
- edited user_page.html to include a piece of advice and the holiday

liamK -- 2021-04-26 11:28
- made greeting customized to a specific user by appending the user's name
- created a javascript script that fetches and updates the clock every second

ethanS -- 2021-04-27 12:50
- finished notes functionality
    - new users have a pre-chosen message pushed into template
    - users can edit content and save it
    - saved content is maintained between sessions
- updated SQL queries to be resistant to SQL injection
- addedd helper function a_remove, which is the opposite of a_clean
    - a_clean duplicates apostrophes to prevent python string/parsing errors
    - a_remove then takes out the extra apostrophe that was added
- fixed to-dos
- updated gitignore

maddyA -- 2021-04-27 21:50
- added the code for the dog photo API to the __init__.py file
- edited user_page.html to include dog photo

maddyA -- 2021-04-28 1:06
- noticed an error with the Weather API (specifically with the geocoder library); commented it out and notified Liam (who will work on it)
- created separate pages for login and register functions (updated __init__.py accordingly and split main.html into login.html and register.html)
- created and began styling login.html and register.html
- updated and began styling error.html
- created style.css (and began experimenting with Foundation)
- added a register button to login page (takes user from login page to register page)
- a cancel button to register page (takes user from register page to login page)
- added error messages for all errors, as well as correct routes for user to "try again"
- experiencing an error when at the root route --> "Method Not Allowed. The method is not allowed for the requested URL."
    - I added methods=["POST"] to the root route, so it now is @app.route("/", methods=["POST"])
    - root route works well if you start at http://127.0.0.1:5000/logout?Submit=Logout, click the sign up button, and then the cancel button, bringing you back to the root route
    - does not work if you immediately go to http://127.0.0.1:5000/

ameliaC -- 2021-04-27 13:40
- wrote API card for Public Holidays API
- added to api_kb in notes and code repo
- edited readme to follow specification on stuycs assignment page
    - changed heading to "tbd by lame"
    - added new section for APIs used
    - linked API cards for Advice Slip, Public Holidays, Dog CEO APIs
    - Open Weather API will be linked once the card is made
- updated design doc to reflect change from motivational quote to piece of advice, uploaded new version
